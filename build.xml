<?xml version="1.0"?>
<project name="apxendexStatisticsWidget" default="dist">
    <property name="dist.dir"    value="dist" />
    <property name="src.dir"     value="${dist.dir}/src" />
    <property name="docs.dir"    value="docs" />
    <property name="widget.name" value="apxendexStatisticsWidget" />

    <!-- specify timestamps -->
    <tstamp>
        <format property="version.timestamp" pattern="yyyy-MM-dd'T'HH:mm:ss" locale="nl,NL" />
    </tstamp>
    <tstamp>
        <format property="version.date" pattern="yyyyMMdd" locale="nl,NL" />
    </tstamp>
    <tstamp>
        <format property="copyright.year" pattern="yyyy" locale="nl,NL" />
    </tstamp>
    <tstamp>
        <format property="version.build" pattern="yyyyMMddHHmmss" locale="nl,NL" />
    </tstamp>

    <!-- bamboo.buildNumber will be set by Bamboo, but for local builds this fallback to a timestamp -->
    <target name="setBuildNumber" unless="bamboo.buildNumber">
        <echo>Setting local build number</echo>
        <tstamp>
            <format property="bamboo.buildNumber" pattern="yyyyMMddHHmmss" locale="nl,NL" />
        </tstamp>
    </target>

    <!-- bamboo.buildKey will be set by Bamboo, but for local builds this fallback to LOCAL -->
    <target name="setBuildKey" unless="bamboo.buildKey">
        <echo>Setting local build key</echo>

        <property name="bamboo.buildKey" value="LOCAL" />
    </target>

    <!-- Cleanup any (previous) distribution files -->
    <target name="clean" depends="cleandocs" description="Removes all intermediate files">
        <echo>Cleaning distribution files...</echo>
        <delete dir="${dist.dir}" />
    </target>

    <target name="pre-dist">
        <mkdir dir="${src.dir}" />

        <!-- Copy the source files -->
        <copy todir="${src.dir}/">
            <fileset dir="." excludes="${dist.dir}/, build.xml" />
        </copy>
    </target>

    <!-- Documentation related (jsDocs) -->
    <target name="cleandocs">
        <echo>Cleaning documentation files...</echo>
        <!-- Cleanup old documentation files -->
        <delete dir="${docs.dir}/symbols" failonerror="false">
            <fileset dir="${docs.dir}" includes="**/*" />
        </delete>
    </target>

    <target name="docs" depends="cleandocs">
        <echo>Building documentation files...</echo>

        <!-- Build the documentation using jsDoc Toolkit -->
        <apply executable="java" parallel="true" verbose="true" dir="." relative="true">
            <arg value="-jar" />
            <arg value="lib/jsdoc-toolkit/jsrun.jar" />
            <arg value="lib/jsdoc-toolkit/app/run.js" />
            <!--<arg value="-a" />-->
            <arg value="-t=lib/jsdoc-toolkit/templates/marviq" />
            <arg value="-d=${docs.dir}" />

            <fileset dir=".">
                <include name="*.js" />
            </fileset>
        </apply>
    </target>

    <!-- Concatinate javascript files -->
    <target name="js.concat">
        <echo>Concatenating javascript files for ${widget.name}...</echo>

        <!-- Combine all the libraries with the widget -->
        <concat destfile="${src.dir}/${widget.name}.js">
            <!-- Libraries -->
            <fileset file="${src.dir}/lib/jquery.tinyscrollbar.js" />
            <fileset file="${src.dir}/lib/highcharts.js" />
            <fileset file="${src.dir}/lib/context.js" />
            <fileset file="${src.dir}/lib/xdm.js" />

            <fileset file="${src.dir}/core/utilities.js" />
            <fileset file="${src.dir}/core/services.js" />
            <fileset file="${src.dir}/core/chart.js" />
            <fileset file="${src.dir}/core/table.js" />
            <fileset file="${src.dir}/core/controller.js" />
        </concat>

        <!-- Cleanup combined files -->
        <delete>
            <fileset dir="${src.dir}/lib" />
            <fileset dir="${src.dir}/core" />
        </delete>

        <!-- Set the build number -->
        <replaceregexp flags="sg">
            <regexp pattern="(/\*\s*)?@@build-nr-start@@[^\@]*@@build-nr-end@@(\s*\*/)?" />
            <substitution expression="${version.build}" />
            <fileset dir="${src.dir}">
                <include name="**/*.js" />
                <include name="**/*.html" />
            </fileset>
        </replaceregexp>

        <!-- Changed the includes in html files -->
        <replaceregexp flags="sg">
            <regexp pattern="@@js-dev-start@@[^\@]*@@js-dev-end@@" />
            <substitution expression="" />
            <fileset dir="${src.dir}">
                <include name="**/*.html" />
            </fileset>
        </replaceregexp>
        <replaceregexp byline="true" flags="m">
            <regexp pattern="^.*@@js-prod-start@@(.*)@@js-prod-end@@.*$" />
            <substitution expression="\1" />
            <fileset dir="${src.dir}">
                <include name="**/*.html" />
            </fileset>
        </replaceregexp>
    </target>

    <target name="js.compile.yui" depends="js.concat">
        <echo>Compressing javascript files...</echo>
        <!-- Compile javascript source files using YUI compressor -->
        <apply executable="java" parallel="false" verbose="true" dest="${src.dir}">
            <fileset dir="${src.dir}" includes="*.js"/>
            <arg value="-jar"/>
            <arg path="lib/yuicompressor/yuicompressor-2.4.2.jar"/>
            <arg value="-v"/>
            <arg value="--type"/>
            <arg value="js"/>
            <arg value="--charset"/>
            <arg value="utf-8"/>
            <srcfile/>
            <arg value="-o"/>
            <mapper type="glob" from="*.js" to="*-compiled.js"/>
            <targetfile/>
        </apply>

        <!-- Move and replace original files -->
        <move todir="${src.dir}" includeemptydirs="false">
            <fileset dir="${src.dir}" includes="*.js"/>
            <mapper type="glob" from="*-compiled.js" to="*.js"/>
        </move>
    </target>

    <target name="dist" depends="clean, setBuildNumber, setBuildKey, docs, pre-dist, js.compile.yui" description="Package distribution files">
        <echo>Building distribution artifacts...</echo>

        <!-- Remove development files -->
        <delete dir="${src.dir}/lib" />
        <delete dir="${src.dir}/core" />
        <delete dir="${src.dir}/docs/src" />
        <delete dir="${src.dir}/tests" />

        <!-- Create the zip archive -->
        <zip destfile="${dist.dir}/${widget.name}_${bamboo.buildKey}-${bamboo.buildNumber}.zip" basedir="${src.dir}">
            <exclude name="docs/" />
            <include name="**" />
        </zip>

        <zip destfile="${dist.dir}/${widget.name}_docs_${bamboo.buildKey}-${bamboo.buildNumber}.zip" basedir="${src.dir}/docs">
            <include name="**" />
        </zip>
    </target>

    <target name="debug" depends="clean, setBuildNumber, setBuildKey,  docs, pre-dist, js.concat" description="Package debug files">
        <echo>Building debug artifacts...</echo>

        <!-- Remove development files -->
        <delete dir="${src.dir}/lib" />
        <delete dir="${src.dir}/docs/src" />
        <delete dir="${src.dir}/tests" />

        <!-- Create the zip archive -->
        <zip destfile="${dist.dir}/${widget.name}_${bamboo.buildKey}-${bamboo.buildNumber}.zip" basedir="${src.dir}">
            <exclude name="docs/" />
            <include name="**" />
        </zip>

        <zip destfile="${dist.dir}/${widget.name}_docs_${bamboo.buildKey}-${bamboo.buildNumber}.zip" basedir="${src.dir}/docs">
            <include name="**" />
        </zip>
    </target>
</project>