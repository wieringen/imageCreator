<?xml version="1.0"?>

<project name="imageCreator" default="dist">

    <description>imageCreator Build</description>

    <target name="-load.properties" description="Set properties for this build.">
        <property name="yui.jar"   value="tools/yuicompressor/yuicompressor-2.4.2.jar"/>
        <property name="jsdoc"     value="tools/jsdoc-toolkit"/>

        <property name="dist.dir" value="dist" />
        <property name="src.dir"  value="${dist.dir}/src" />
        <property name="docs.dir" value="docs" />
        <property name="app.dir"  value="src" />
        <property name="widget.name" value="imageCreator" />
    </target>
       
    <!-- Create build directory structure. -->
    <target name="-init" description="Create build directory structure.">        
        <echo>Clean dist directory.</echo>
        <delete dir="${dist.dir}"/>

        <echo>Create build directory structure...</echo>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${src.dir}"/>
        
        <copy todir="${src.dir}/css">
            <fileset dir="${app.dir}/css" includes="**/*" />
        </copy>

        <copy todir="${src.dir}/core">
            <fileset dir="${app.dir}/core" includes="**/*" />
        </copy>   

        <copy todir="${src.dir}/lib">
            <fileset dir="${app.dir}/lib" includes="**/*" />
        </copy>

        <copy todir="${src.dir}/images">
            <fileset dir="${app.dir}/images" includes="**/*" />
        </copy>  

         <copy file="${app.dir}/index.html"  todir="${src.dir}" />                   
    </target>

    <!-- Set build number. -->
    <target name="-set.builds" description="Set build numbers.">
        <echo>Set build number...</echo>

        <replaceregexp flags="sg">
            <regexp pattern="@@tinyscrollbar-build-number@@" />
            <substitution expression="${tinyscrollbar.version}" />

            <fileset dir="${src.dir}">
                <include name="index.html" />
                <include name="projects/tinyscrollbar/index.html" />
                <include name="projects/tinyscrollbar/js/jquery.tinyscrollbar.js" />
            </fileset>
        </replaceregexp>
    </target>

   <!-- Concatenate CSS files -->
    <target name="-css.concat">
        <!-- Combine all the individual CSS resources -->
        <echo>Concatenating Web application CSS files...</echo>
        <concat destfile="${src.dir}/css/imageCreator.css">
            <fileset file="${src.dir}/css/base.css" />
            <fileset file="${src.dir}/css/buttons.css" />
            <fileset dir="${src.dir}/css" includes="*.css" excludes="style.css, base.css, buttons.css" />
        </concat>

        <!-- Cleanup combined files -->
        <delete includeemptydirs="true">
            <fileset dir="${src.dir}/css" includes="*.css" excludes="imageCreator.css" />
        </delete>
    </target>

    <!-- Compile CSS source files using YUI compressor -->
    <target name="-css.compile">
        <echo>Compressing Web application CSS files...</echo>

        <apply executable="java" parallel="false" verbose="true" dest="${src.dir}/css">
            <fileset dir="${src.dir}/css" includes="imageCreator.css"/>
            <arg value="-jar"/>
            <arg path="${yui.jar}"/>
            <arg value="--type"/>
            <arg value="css"/>
            <arg value="--charset"/>
            <arg value="utf-8"/>
            <srcfile/>
            <arg value="-o"/>
            <mapper type="glob" from="*.css" to="*-compiled.css"/>
            <targetfile/>
        </apply>

         <!-- Move and replace original files -->
        <move todir="${src.dir}" includeemptydirs="false">
            <fileset dir="${src.dir}" includes="css/*.css"/>
            <mapper type="glob" from="*-compiled.css" to="*.css"/>
        </move>
    </target>

    <!-- Concatinate javascript files -->
    <target name="-js.concat">
        <echo>Concatenating javascript files...</echo>

        <concat destfile="${src.dir}/jquery.${widget.name}.js">
            <!-- RequireJS Libraries -->
            <fileset file="${src.dir}/lib/require/almond.js" />
            <fileset file="${src.dir}/lib/require/domReady.js" />
            <fileset file="${src.dir}/lib/require/lazyRequire.js" />
            <fileset file="${src.dir}/lib/require/text.js" />
    
            <!-- jQuery plugins -->
            <fileset file="${src.dir}/lib/jquery.circleSlider.js" />
            <fileset file="${src.dir}/lib/jquery.colorPicker.js" />
            <fileset file="${src.dir}/lib/jquery.dropArea.js" />
            <fileset file="${src.dir}/lib/jquery.slider.js" />
            <fileset file="${src.dir}/lib/jquery.tabular.js" />

            <!-- Core -->
            <fileset file="${src.dir}/core/utils.js" />
            <fileset file="${src.dir}/core/selection.js" />

            <fileset file="${src.dir}/core/toolbar/image.js" />
            <fileset file="${src.dir}/core/toolbar/text.js" />
            <fileset file="${src.dir}/core/toolbar/info.js" />
            <fileset file="${src.dir}/core/toolbar/layers.js" />

            <fileset file="${src.dir}/core/engine/svg.js" />
            <fileset file="${src.dir}/core/engine/vml.js" />
            <fileset file="${src.dir}/core/engine/canvas.js" />

            <fileset file="${src.dir}/core/main.js" />
        </concat>

        <!-- Cleanup combined files -->
        <delete includeemptydirs="true">
            <fileset dir="${src.dir}/lib" />
            <fileset dir="${src.dir}/core" />
        </delete>
    </target>

    <!-- Validate javascript files. failonerror="true -->
    <target name="-js.lint" description="Validate javascript files.">
        <echo>Validate javascript files...</echo>

        <apply executable="java" parallel="false">
            <arg value="-jar"/>
            <arg value="${rhino.jar}"/>
            <arg value="${jshint.js}"/>
            <srcfile/>

            <fileset dir="${src.dir}/projects" includes="**/*.js">
                <contains text="baijs" casesensitive="no"/>
            </fileset>
        </apply>
    </target>

    <!-- Compress project Javascript -->
    <target name="-js.compress" description="Compress project Javascript.">
        <echo>Compressing javascript files...</echo>

        <apply executable="java" parallel="false" verbose="true" dest="${src.dir}">
            <arg value="-jar"/>
            <arg path="${yui.jar}"/>
            <arg value="-v"/>
            <arg value="--type"/>
            <arg value="js"/>
            <arg value="--charset"/>
            <arg value="utf-8"/>
            <srcfile/>
            <arg value="-o"/>
            <targetfile/>

            <fileset dir="${src.dir}" includes="jquery.${widget.name}.js"></fileset>

            <mapper type="glob" from="*.js" to="*.min.js"/>
        </apply>

         <!-- Move and replace original files -->
        <move todir="${src.dir}" includeemptydirs="false">
            <fileset dir="${src.dir}"/>
            <mapper type="glob" from="*-min.js" to="*.js"/>
        </move>
    </target>


    <!-- Set production links -->
    <target name="-set.links" description="Set production links.">
        <echo>Compressing javascript files...</echo>

        <replaceregexp flags="sg">
            <regexp pattern="@@js-dev-start@@[^\@]*@@js-dev-end@@" />
            <substitution expression="" />
            <fileset dir="${src.dir}">
                <include name="**/*.html" />
            </fileset>
        </replaceregexp>
        <replaceregexp byline="true" flags="m">
            <regexp pattern="^.*@@js-prod-start@@(.*)@@js-prod-end@@.*$" />
            <substitution expression="\1" />
            <fileset dir="${src.dir}">
                <include name="**/*.html" />
            </fileset>
        </replaceregexp>
    </target>

    <!-- Pack the project examples. -->
    <target name="-examples.pack" description="Pack the project examples.">
        
        <copy file="${src.dir}/projects/tinycircleslider/js/jquery.tinycircleslider.min.js" todir="${src.dir}/projects/tinycircleslider/example/js" />  
        <copy file="${src.dir}/projects/tinyscrollbar/js/jquery.tinyscrollbar.min.js" todir="${src.dir}/projects/tinyscrollbar/example/js" />  
        <copy file="${src.dir}/projects/tinycarousel/js/jquery.tinycarousel.min.js" todir="${src.dir}/projects/tinycarousel/example/js" />  

        <echo>Zip the project examples...</echo>

        <zip destfile="${src.dir}/projects/tinycircleslider/example.zip" basedir="${src.dir}/projects/tinycircleslider/example"/> 
        <zip destfile="${src.dir}/projects/tinyscrollbar/example.zip"    basedir="${src.dir}/projects/tinyscrollbar/example"/> 
        <zip destfile="${src.dir}/projects/tinycarousel/example.zip"     basedir="${src.dir}/projects/tinycarousel/example"/>

        <echo>Tar and gzip the project examples...</echo>

        <tar    destfile="${src.dir}/projects/tinycarousel/example.tar" basedir="${src.dir}/projects/tinycarousel/example"/>
        <gzip   destfile="${src.dir}/projects/tinycarousel/example.tar.gz"  src="${src.dir}/projects/tinycarousel/example.tar"/>
        <delete file="${src.dir}/projects/tinycarousel/example.tar"/>
        <delete dir="${src.dir}/projects/tinycarousel/example"/> 

        <copy   file="${src.dir}/projects/tinyscrollbar/js/jquery.tinyscrollbar.min.js"  todir="${src.dir}/projects/tinyscrollbar/example/js" /> 
        <tar    destfile="${src.dir}/projects/tinyscrollbar/example.tar" basedir="${src.dir}/projects/tinyscrollbar/example"/>
        <gzip   destfile="${src.dir}/projects/tinyscrollbar/example.tar.gz"  src="${src.dir}/projects/tinyscrollbar/example.tar"/> 
        <delete file="${src.dir}/projects/tinyscrollbar/example.tar"/>
        <delete dir="${src.dir}/projects/tinyscrollbar/example"/> 

        <tar    destfile="${src.dir}/projects/tinycircleslider/example.tar" basedir="${src.dir}/projects/tinycircleslider/example"/>
        <gzip   destfile="${src.dir}/projects/tinycircleslider/example.tar.gz"  src="${src.dir}/projects/tinycircleslider/example.tar"/>
        <delete file="${src.dir}/projects/tinycircleslider/example.tar"/>    
        <delete dir="${src.dir}/projects/tinycircleslider/example"/>        
    </target>

    <!-- Build the documentation using jsDoc Toolkit -->
    <target name="-docs" description="Build the documentation.">
        <echo>Cleaning documentation files...</echo>
        <delete dir="${docs.dir}"/>

        <echo>Create documentation directory structure...</echo>
        <mkdir dir="${docs.dir}"/>
        
        <echo>Building documentation files...</echo>

        <apply executable="java" parallel="true" verbose="true" dir="." relative="true">
            <arg value="-jar" />
            <arg value="${jsdoc}/jsrun.jar" />
            <arg value="${jsdoc}/app/run.js" />
            <!--<arg value="-a" />-->
            <arg value="-t=${jsdoc}/templates/jsdoc" />
            <arg value="-d=${docs.dir}" />

            <fileset dir=".">
                <include name="projects/tinycircleslider/js/jquery.tinycircleslider.js" />
                <include name="projects/tinyscrollbar/js/jquery.tinyscrollbar.js" />
                <include name="projects/tinycarousel/js/jquery.tinycarousel.js" />
            </fileset>
        </apply>
    </target>

    <!--Build-->
    <target name="dist" 
            description="Builds project files for production use"
            depends="
                -load.properties, 
                -init,
                -set.builds,
                -css.concat,
                -css.compile,
                -js.concat,
                -js.compress,
                -set.links">
    </target>

</project>